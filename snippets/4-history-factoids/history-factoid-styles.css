*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
}

html, body {
  
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;;
  color: white;
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

.top-bar {
  display: flex;
  align-items: center;
  padding: 10px 20px;
  font-size: 0.7rem;
  height: 56px; /* ??? Should I make it flexible? */
  background-color: #1e306e;
}

.top-left-column {
  flex: 0 0 auto; /* This column won't grow or shrink and will have its initial size */
  display: flex;
  align-items: center;
}

.top-left-column img {
  width: 24px; /* Adjust the width of the image as needed */
  height: auto; /* Maintain aspect ratio */
  margin-right: 8px; /* Add spacing between the image and text */
}

.top-middle-column {
  flex: 1; /* This column will grow to fill the remaining space */
  text-align: center;
  font-size: 0.9rem;
}

.top-right-column {
  flex: 0 0 auto; /* This column won't grow or shrink and will have its initial size */
  margin-left: auto; /* This pushes it to the right */
  display: flex;
  align-items: center;
}

.top-right-column img {
  width: 24px; /* Adjust the width of the image as needed */
  height: auto; /* Maintain aspect ratio */
  margin-right: 8px; /* Add spacing between the image and text */
}

.navbar {
  display: flex;
  justify-content: space-between; /* Distribute items evenly along the main axis */
  align-items: center; /* Align items vertically */
  background-color: white;
  color: #1e306e;
  padding: 10px 20px;
  height: 56px;
  font-size: 0.9rem;
}

.navbar a {
  text-decoration: none; /* Removes the underline */
  color: inherit; /* Inherits the color from its parent */
}

.logo {
  height: auto; /* Ensure the container adjusts its height based on its content */
  align-items: center; /* Align items vertically */
}

.logo img {
  width: auto; /* Allow the width to adjust automatically */
  height: 100%; /* Set the height of the image to 100% of its container */
}

.navigation {
  display: flex;
  align-items: center;
}

.navigation ul {
  list-style-type: none; /* Remove default list styles */
  margin: 0;
  padding: 0;
  display: flex;
}

.navigation li {
  margin-right: 20px; /* Add spacing between navigation links */
}

.shopping-cart {
  display: flex;
  align-items: center;
}

.shopping-cart img {
  width: 30px; /* Adjust the width of the shopping cart icon as needed */
  height: auto; /* Maintain aspect ratio */
}

.promotion {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-auto-rows: 356px;
}

.img1 {
  grid-column: span 2;
}

.img1, .img2, .img3, .img4 {
  grid-row: 1; /* Places these images on the first row */ÃŸ
}

.banner {
  grid-column: span 5;
  grid-row: 2;
}

.promotion img {
  max-width: 100%;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* TODO: Use repeat() */

.history-factoids {
  display: grid;
  grid-template-columns: 1fr 270px 270px 270px 1fr; /* 5 columns. 1fr = 1 fraction of the available space */
  grid-template-rows: auto auto; /* 2 rows. Height is determined by content. */
  align-items: center; /* Align items vertically */
  justify-items: center; /* Align items horizontally */
  color: #1e306e; /* The text color applies to the <p> elements in .background-story and each .factoid */
  border: 1px solid #1e306e; /*- ADDED FOR VISUALIZATION -*/
}

.background-story {
  grid-column: 2 / span 3;
  /*
          |  1  |  2  |  3  |  4  |  5  |
  (Row 1) |     |   [BACKGROUND]  |     |
  (Row 2) |     | FT1 | FT2 | FT3 |     |
  */
  grid-row: 1;
  display: flex;
  padding: 30px;
  font-size: 2rem;
  font-weight: 500;
  text-align: center;
  word-wrap: break-word;
}

.factoid { /* Using class to target all factoids */
  display: flex;
  flex-direction: column; /* Stack the elements vertically */

  align-items: center; /* When an item is text, this will align the whole block of text */
                       /* to the center of the column, but the text will not be centered */
                       /* horizontally within the block */
  /* align-items without text-align ---> |---[TEXT----]---| */                  
  /* align-items with    text-align ---> |---[--TEXT--]---| */
  justify-content: center;
  /*
  flex-direction determines the main axis.
  align-items aligns items along the cross axis.
  justify-content aligns items along the main axis.
  So, if flex-direction is column:

  The main axis runs vertically (top to bottom).
  align-items will align items horizontally (left, center, right).
  justify-content will align items vertically (top, center, bottom).
  If flex-direction is row:

  The main axis runs horizontally (left to right).
  align-items will align items vertically (top, center, bottom).
  justify-content will align items horizontally (left, center, right).

  */
  text-align: center; /* This attribute is inherited by child elements */
                      /* so it's not necessary to apply it at the level of <p> element */
}

#factoid1 { /* Using IDs to target specific factoids */
            /* Because the location of the factoids is fixed */
  grid-column: 2;
  grid-row: 2;
}

#factoid2 {
  grid-column: 3;
  grid-row: 2;
}

#factoid3 {
  grid-column: 4;
  grid-row: 2;
} 

/*--------------------------------------------*/

.history-factoids2 {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: auto auto;
  align-items: center;
  justify-items: center;
  color: #1e306e;
  border: 1px solid #1e306e;
}

.middle-columns {
  display: grid;
  grid-template-columns: 270px 270px 270px;
  min-width: 810px;
}

.large-text {
  grid-row: 1;
  grid-column: 1 / span 3;
  padding: 30px;
  font-size: 2rem;
  font-weight: 500;
  text-align: center;
  word-wrap: break-word;
}

.factoidx {
  grid-row: 2;
  display: flex;
  flex-direction: column; 
  align-items: center;
  justify-content: center;
  text-align: center;
}

.middle-columns {
  display: grid;
  grid-template-columns: repeat(3, minmax(240px, 270px));
  min-width: 810px;
}

@media (max-width: 810px) {
  .middle-columns {
    grid-template-columns: repeat(3, 240px);
  }
}
